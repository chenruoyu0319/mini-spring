我们把 MVC 与 IoC 整合在了一起。具体过程是这样的：
在 Tomcat 启动的过程中先拿 context-param，初始化 Listener，在初始化过程中，创建 IoC 容器构建 WAC（WebApplicationContext），
加载所管理的 Bean 对象，并把 WAC 关联到 servlet context 里。

然后在 DispatcherServlet 初始化的时候，从 sevletContext 里获取属性拿到 WAC，放到 servlet 的属性中，
然后拿到 Servlet 的配置路径参数，之后再扫描路径下的包，调用 refresh() 方法加载 Bean，最后配置 url mapping。

我们之所以有办法整合这二者，核心的原因是 Servlet 规范中规定的时序，
从 listerner 到 filter 再到 servlet，每一个环节都预留了接口让我们有机会干预，写入我们需要的代码。
我们在学习过程中，更重要的是要学习如何构建可扩展体系的思路，在我们自己的软件开发过程中，记住不要将程序流程固定死，
那样没有任何扩展的余地，而应该想着预留出一些接口理清时序，让别人在关节处也可以插入自己的逻辑。

容器是一个框架，之所以叫做框架而不是应用程序，关键就在于这套可扩展的体系，留给其他程序员极大的空间。
读 Rodd Johnson 这些大师的源代码，就像欣赏一本优美的世界名著，每每都会发出“春风大雅能容物，秋水文章不染尘”的赞叹。
希望你可以学到其中的精髓。